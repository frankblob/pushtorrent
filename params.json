{"name":"Torrent Watch","tagline":"Get torrent notifications in your inbox [alpha] // Sinatra app","body":"# Welcome to 'Torrent Watch' \r\n## AKA 'contribs/name suggestions are welcome'\r\n\r\nBuilt with Ruby 2.2.0, [Sinatra](http://sinatrarb.com) 1.4.5 and [Nokogiri](http://www.nokogiri.org/) 1.6.5.\r\n\r\n### Description of the web app's basic functionality\r\nTorrent Watch lets users opt-in to receive email notifications when new torrents of choice are ready for download. No need to do daily manual searches for newly released torrents, e.g. 'ruby on rails', 'the stranger 720p HD', 'FLAC' or similar.   \r\n\r\nWhy not get an email when the torrents you seek are released?\r\n\r\n#### To-do list?\r\nSure. Check the [to-do](TODO.md) file. \r\n\r\n#### About me\r\nThe project described above seems more complex than actually doable for someone with my current coding skill set. My personal goal is to hack away at this steep challenge and learn as much as possible.  \r\n\r\nIn short I'm nobody, newbie and non-programmer. Dabbling in my first attempts at Ruby, object-oriented programming and GitHub. Torrent Watch is my first web application attempt besides auto-deploying a [RailsBricks3](http://railsbricks.net) app, since I could not get anything self-coded to work on Heroku :)\r\n\r\n##### Ruby questions I currently wonder about... \r\n1. When do instance variables 'die'? Trying to understand the memory usage of Ruby apps...\r\n2. Is it worth it to manually set an instance variable = nil, when no longer in use? Or will Ruby GC do it for me?\r\n3. Why is GC for symbols great? Should I use symbols more and thereby, as a consequence, optimize the memory usage of the app?\r\n3. Will performance and memory utilization improve by replacing Nokogiri with Ox, Oga or even [Curb](https://rubygems.org/gems/curb), in terms of installed gems alone? Not focucing on the performance of the individual gems (Nokogori vs Ox parsing, for instance), but the number, dependencies and size of installed gems.\r\n4. Is it necessary to implement something akin to [referential integrity](https://github.com/orcasnet/activerecord-referential_integrity) for foreign keys in Sequel? Have done check and delete on \"zero associations\" in Sequel for now.\r\n\r\n## Join this project\r\nAll help is welcome. I'm glad to share this project with any interested contributors; newbie, experienced, young and old, english-speaking or english-trying. Contribute as you best can.\r\n\r\nFor newbies as myself, that would perhaps be [correcting typos or similar](http://www.codenewbie.org/podcast/24-pull-requests) and submitting a [pull request](http://readwrite.com/2014/07/02/github-pull-request-etiquette) as detailed on the friendly, but easily over-stimulating pull request [walk-through](https://help.github.com/articles/using-pull-requests/) on Github. \r\n\r\nTry it - and you have started collaborating! \r\n\r\nOkay, that's it, I guess. \r\n\r\n**Stay cheerful**","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}